name: donet-stackspot-mongoprovider-plugin
description: Provedor de acesso ao bando NoSql mongoDb
display-name: donet-stackspot-mongoprovider-plugin
picture: plugin.png
category: backend # Ref: https://docs.stackspot.com/latest/docs/creators-guide/yaml/#category
compatibility:
  - dotnet 6
  - dotnet 5
  - dotnet core 3.1
about: docs/about.md
usage: docs/usage.md
use-case: docs/use-case.md
implementation: docs/implementation.md
technologies: # Ref: https://docs.stackspot.com/latest/docs/creators-guide/yaml/#technologies
  - "C#"
  - ".Net"
types:
  - app
inputs:
  - label: String de conexão
    type: text
    name: string_conexao

  - label: Nome do banco de dados
    type: text
    name: nome_banco_dados

  - label: Selecione o tipo da instalação do plugin
    type: text
    name: type_mongo_plugin_import
    items:
      - "dll-reference"
      - "project-reference"
      - "file-copy"
      - "nuget"

computed-inputs:
  path_plugin_project: '{{component_path | replace("\\","\/")}}/templates/src' ##Plugin path to build befere use it.
  base_path: "{% if global_computed_inputs.src_base_path is defined and global_computed_inputs.src_base_path != '' %}{{global_computed_inputs.src_base_path}}{% else %}{{'.'}}{% endif %}"
  path_infrastructure: ""

hooks:
  - type: run-script
    trigger: before-render
    script: scripts/folder-validation.py
  #building plugin project
  - type: run
    trigger: before-render
    windows:
      - dotnet restore {{computed_inputs.path_plugin_project}}
      - dotnet build {{computed_inputs.path_plugin_project}} -o {{computed_inputs.path_plugin_project}}/output -c Release
  #Plugin build and reference Dll
  - type: run-script
    trigger: before-render
    script: scripts/create-folder-libs.py
  - type: run-script
    trigger: after-render
    script: scripts/remove-folder.py
  - type: edit
    trigger: before-render
    path: ""
    changes:
      - search:
          string: "</ItemGroup>"
          insert-after:
            snippet: snippets/mongo-providers.txt
          when:
            not-exists: "NOT-RENDER"

  # - type: render-templates
  #   trigger: before-render
  #   path:
  #   condition:
  #     variable: type_mongo_plugin_import
  #     operator: ==
  #     value: dll-reference
  #   commands:

  # - type: edit
  #   trigger: before-render
  #   path: "{{computed_inputs.base_path}}/src/{{global_inputs.project_name}}.Infrastructure/{{global_inputs.project_name}}.Infrastructure.csproj"
  #   changes:
  #     - search:
  #         string: "</ItemGroup>"
  #         insert-after:
  #           snippet: snippets/mongo-providers.txt
  #         when:
  #           not-exists: "NOT-RENDER"
# #project-reference
#   - type: render-templates
#     trigger: before-render
#     path:
#     condition:
#       variable: type_mongo_plugin_import
#       operator: ==
#       value: project-reference
#     commands:

# #file-copy
#   - type: render-templates
#     trigger: before-render
#     path:
#     condition:
#       variable: type_mongo_plugin_import
#       operator: ==
#       value: file-copy
#     commands:

# #nuget
#   - type: render-templates
#     trigger: before-render
#     path:
#     condition:
#       variable: type_mongo_plugin_import
#       operator: ==
#       value: nuget
#     commands:

#configuração startup
  - type: edit
    trigger: before-render
    path: "{{computed_inputs.base_path}}/Startup.cs"
    changes:
      - search:
          string: "using"
          insert-before:
            value: "using MongoProvider;"
          when:
            not-exists: "using MongoProvider;"
      - search:
          string: "var app = builder.Build();"
          insert-before:
            value: "builder.Services.AddMongoProviders(builder.Configuration);\n"
          when:
            not-exists: "builder.Services.AddMongoProviders(builder.Configuration);"
# #appsetting
#   - type: edit
#     trigger: before-render
#     path: "{{computed_inputs.base_path}}/appsettings.json"
#     changes:
#       - search:
#           string: "},"
#           insert-before:
#             snippet: snippets/mongo.txt
#           when:
#             not-exists: "mongo"
